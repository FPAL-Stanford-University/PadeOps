&INPUT
inputdir              = "/scratch/aghate/dump/ScalarSourceTesting"   ! Directory for any input files
outputdir             = "/scratch/aghate/dump/ScalarSourceTesting"   ! Directory for all output files
nx                    = 1280          ! Number of points in X
ny                    = 256          ! Number of points in Y
nz                    = 256          ! Number of points in Z
tstop                 = 50.D0       ! Physical time to stop the simulation
CFL                   = 0.8D0       ! CFL criterion for calculating the time step (Set to negative to disable)
dt                    = -0.1D0     ! Fixed time step value (only used if CFL is set to negative)
prow                  = 0           ! Number of rows in 2D processor decomposition (set 0 for auto-tuning)
pcol                  = 0           ! Number of rows in 2D processor decomposition (set 0 for auto-tuning)
useRestartFile        = .FALSE.     ! Set to false if it's a fresh simulation 
restartFile_TID       = 8000        ! TimeID of the restart file being used
restartFile_RID       = 15          ! RunID of the restart file being used
/
/
&NUMERICS
TimeSteppingScheme    = 2           ! 0: Adams-Bashforth, 1: TVD-RK3, 2: SSP-RK45 
AdvectionTerm         = 1           ! 0: Rotational Form, 1: Skew-Symmetric Form (use this for Compact Scheme)
NumericalSchemeVert   = 2           ! 0: Second order FD, 1: Sixth order Compact Difference (CD06), 2: Fourier Collocation
ComputeStokesPressure = .TRUE.      ! This would be FALSE only is very special circumstances.  
useDealiasFilterVert  = .FALSE.     ! Dealiasing filter used in vertical direction
t_DivergenceCheck     = 100         ! Check divergence every $ timesteps. Reproject if needed.
/
/
&IO
RunID                 = 6          ! Run Label (All output files will be tagged with this nubber)
t_restartDump         = 2000        ! Restart File Dumping Frequency  (# of timesteps)
t_dataDump            = 100        ! Data dumping frequency (# of timesteps)
ioType                = 0           ! 0: Fortran Binaries, 1: .vtk files
dumpPlanes            = .TRUE.     ! Dump plane visualations. Select planes in initialize.F90
t_planeDump           = 10         ! Plane dumping frequency (# of timesteps)
t_start_planeDump     = 1           ! When do you want to start dumping planes?
t_stop_planeDump      = 50000        ! When do you want to stop dumping planes?
/
/
&STATS
tid_StatsDump         = 20000        ! Dumping Frequency for Statistics file (# of time steps)
tid_compStats         = 10         ! Frequency of Computing Statistics
tSimStartStats        = 100.d0       ! Simulation time for starting stats calculations 
normStatsByUstar      = .TRUE.      ! Normalize Statistics by ustar at each instant
computeSpectra        = .FALSE.     ! Compute and time average x - spectra on the run
timeAvgFullFields     = .FALSE.     ! Time average and store fields on the run
/
/
&OS_INTERACTIONS
useSystemInteractions = .TRUE.      ! Do you wish to interact with the program while its running
tSystemInteractions   = 1          ! Check for interactions commands after these many time steps
controlDir            = "null"          ! Check in this directory for command files (NULL = Check in output directory)
/
/
&PHYSICS
isInviscid            = .TRUE.      ! Is this an inviscid simulation?
useCoriolis           = .FALSE.     ! Activate the coriolis term? 
useExtraForcing       = .FALSE.      ! Is an extra forcing term being used? (non-Geostrophic forcing only)
useGeostrophicForcing = .FALSE.     ! This is true if forcing is provided using the coriolis term  
isStratified          = .FALSE.     ! Use Stratification / active scalar in momentum
Pr                    = 0.6D0       ! Turbulent Prandtl Number; used when 
Ro                    = 1.D10       ! Rossby Number used when Coriolis is ON
Re                    = 100.D0       ! Reynolds Number; used when isInvisid is FALSE
Fr                    = 1.D10       ! Froude number; used when isStratified is TRUE
G_geostrophic         = 1.D0        ! Geostrophic wind speed 
G_alpha               = 0.D0        ! Geostrophic wind angle (degrees, from +x axis)
dPfdx                 = 0.D0        ! Additional Acceleration in X; used if useExtraForcing is ON
dPfdy                 = 0.D0        ! Additional Acceleration in Y; used if useExtraForcing is ON
dPfdz                 = 0.D0        ! Additional Acceleration in Z; used if useExtraForcing is ON
useScalars            = .TRUE.      ! Do you want to use additional scalars?
useSGS                = .TRUE.      ! Use a subgrid scale model? 
/
/
&PRESSURE_CALC
fastCalcPressure      = .TRUE.      ! Compute and store pressure at every time step using the faster algorithm?
storePressure         = .FALSE.     ! Would you like to compute and store pressure?
P_dumpFreq            = 100         ! How often (timesteps) do you want to dump pressure?
P_compFreq            = 10          ! How often (timesteps) do you want to compute pressure? 
/
/
&BCs
usedoubleFringex      = .TRUE. 
PeriodicInZ           = .TRUE.      ! Is the problem periodic in Z? If yes, then everything below is ignored. 
topWall               = 2           ! no_slip = 1, slip = 2
botWall               = 2           ! no_slip = 1, slip = 2
useSpongeLayer        = .FALSE.     ! Use a sponge layer at the top 
zstSponge             = 0.8d0       ! Height above which the sponge layer is active
SpongeTscale          = 50.d0       ! e-folding time to dt ratio (somewhere between 10 - 50) 
/
/
&FRINGE
Fringe1_xst                    = 0.75d0         
Fringe1_xen                    = 0.90d0
Fringe1_delta_st_x             = 0.100d0
Fringe1_delta_en_x             = 0.05d0
Fringe2_xst                    = 0.800d0         
Fringe2_xen                    = 0.980d0
Fringe2_delta_st_x             = 0.02d0
Fringe2_delta_en_x             = 0.05d0
LambdaFact                     = 0.60d0 
LambdaFact2                    = 0.75d0
/
/
&SGS_MODEL
SGSModelID                    = 1           ! 0: smagorinsky (w/ wall function), 1: sigma
DynamicProcedureType          = 0           ! 0: No dynamic procedure, 1: Planar Avg. Dynamic Proc.
DynProcFreq                   = 1           ! Dynamic procedure used every DYNPROCFREQ timesteps. 
UseDynamicProcedureScalar     = .false.      ! Use dynamic procedure to compute the turbulent prandtl number? 
deltaRatio                    = 2.d0 
Csgs                          = 1.0d0       ! Model constant (asymptotic value in case wall function is used) 
useVerticalTfilter            = .false.     ! Use test filtering in vertical direction for dynamic procedure? 
WallModelType                 = 0           ! 0: No wall model1: Moeng, 2: Bou-zeid et. al.  
z0                            = 2.5d-4      ! Roughness length scale (CAUTION: this assumes appropriate non-dimensionalization)
useWallDamping                = .FALSE.     ! Use the Wall Damping Function 
ncWall                        = 3.d0        ! Wall Damping Function Exponent
explicitCalcEdgeEddyViscosity = .false.      ! Explicitly calculate or interpolate edge values for eddy viscosity? 
/
/
&WALLMODEL 
wallMType             = 1           ! 0: Moeng's original model, 1: Bou-Zeid's fully local model
z0                    = 1.d-4       ! Roughness length scale (CAREFUL: This is a non-dimensionalized number)
/
/
&WINDTURBINES
useWindTurbines       = .FALSE.             ! Do you want to use Wind turbines ?
num_turbines          = 24
ADM                   = .TRUE.
turbInfoDir           = "/home/nghaisas/ActuatorDisk/"
/
/
&KSPREPROCESS
PreprocessForKS       = .FALSE.        ! Do you want to generate preprocessing files for KS? 
KSoutputDir           = "SomeLocation" ! Directory where KS files are dumped.
KSRunID               = 99             ! RunID tag for KS files
t_dumpKSprep          = 10             ! Dumping Frequency for KS files
/
/
&SCALARS
num_scalars           = 2
scalar_info_dir       = "/projects/windsim/PadeOps/problems/incompressible/ScalarSourceTesting_files"
/
/
&ScalarSourceTestingINPUT
xc                   = 3.1415926535898d0
yc                   = 3.1415926535898d0
zc                   = 3.1415926535898d0
rin                  = 0.75d0
rout                 = 1.25d0
delta_r              = 0.22d0 
smear_x              = 2.5d0
/
